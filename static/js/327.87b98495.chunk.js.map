{"version":3,"file":"static/js/327.87b98495.chunk.js","mappings":"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","sources":["components/common/FormInput.styled.jsx","components/common/FormLabel.styled.jsx","components/common/GeneralForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormInput = styled.input`\n  display: block;\n  width: 80%;\n  margin: 10px auto;\n  font-size: 20px;\n  border-radius: 5px;\n  &:focus {\n    border-color: blue;\n    outline: none;\n  }\n`;\n","import styled from '@emotion/styled';\nexport const FormLabel = styled.label`\n  width: 100%;\n  font-size: 30px;\n  text-align: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 50%;\n  padding: 10px;\n  margin: 0 auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Form } from '../common/GeneralForm.styled';\nimport { CommonButton } from 'components/common/CommonButton.styled';\nimport { FormInput } from 'components/common/FormInput.styled';\nimport { FormLabel } from 'components/common/FormLabel.styled';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const formSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const nameValue = form.name.value;\n    const numberValue = form.number.value;\n    const formData = { name: nameValue, number: numberValue };\n    dispatch(addContact(formData));\n    form.reset();\n  };\n  return (\n    <Form onSubmit={formSubmit}>\n      <FormLabel htmlFor=\"name\">Name</FormLabel>\n      <FormInput\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <FormLabel htmlFor=\"number\">Number</FormLabel>\n      <FormInput\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter phone number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <CommonButton type=\"submit\">Add contact</CommonButton>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ContactLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 20px;\n`;\n\nexport const ContactInfo = styled.span`\n  display: block;\n  margin-right: 5px;\n  font-size: 36px;\n`;\n","import { CommonButton } from 'components/common/CommonButton.styled';\nimport { ContactLi, ContactInfo } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const onDelete = () => dispatch(deleteContact(id));\n  return (\n    <ContactLi>\n      <div>\n        <ContactInfo>{`${name}:`}</ContactInfo>\n        <ContactInfo>{number}</ContactInfo>\n      </div>\n      <CommonButton type=\"button\" onClick={onDelete}>\n        DELETE\n      </CommonButton>\n    </ContactLi>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport default ContactItem;\n","export const getContacts = state => state.contacts.items;\nexport const getContactIsLoading = state => state.contacts.isLoading;\nexport const getContactError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul``;\n","import React from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const getFiltredContacts = () => {\n    const normalizedFilter = filter.value.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filteredContacts = getFiltredContacts();\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number}></ContactItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 40%;\n  margin-top: 10px;\n`;\n","import { FormInput } from 'components/common/FormInput.styled';\nimport { FormLabel } from 'components/common/FormLabel.styled';\nimport React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterContainer } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = e => {\n    const inputValue = e.currentTarget.value;\n    dispatch(setFilter(inputValue));\n  };\n  return (\n    <FilterContainer>\n      <FormLabel>\n        Filter\n        <FormInput type=\"text\" onChange={onChange} />\n      </FormLabel>\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport {\n  getContactIsLoading,\n  getContactError,\n} from '../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getContactIsLoading);\n  const error = useSelector(getContactError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 style={{ fontSize: '30px' }}>Contacts</h2>\n      <Filter></Filter>\n      {isLoading && !error && (\n        <p style={{ fontSize: '30px' }}>Loading contacts...</p>\n      )}\n      {!isLoading && error && (\n        <p style={{ fontSize: '30px' }}>\n          We are sorry, something go wrong. Error message: \"{error}\"\n        </p>\n      )}\n      {!isLoading && !error && <ContactList />}\n    </>\n  );\n}\n"],"names":["FormInput","styled","FormLabel","Form","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","formData","name","value","number","addContact","reset","htmlFor","type","placeholder","pattern","title","required","ContactLi","ContactInfo","id","onClick","deleteContact","getContacts","state","contacts","items","getContactIsLoading","isLoading","getContactError","error","getFilter","filter","List","useSelector","filteredContacts","normalizedFilter","toLocaleLowerCase","contact","includes","getFiltredContacts","map","FilterContainer","onChange","inputValue","currentTarget","setFilter","Contacts","useEffect","fetchContacts","Helmet","style","fontSize"],"sourceRoot":""}